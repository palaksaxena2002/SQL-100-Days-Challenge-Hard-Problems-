Question:
You have a table called Employees with the following columns:
id: A unique number for each employee.
name: The name of the employee.
manager_id: The id of the employee’s manager (this can be NULL if the employee has no manager).

Write a SQL query to show each employee's name along with their level in the company hierarchy. 
The level should start at 1 for employees who don’t have a manager (they are at the top of the hierarchy).

-- Create statement
DROP TABLE IF EXISTS Employees;
CREATE TABLE Employees (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    manager_id INT
);


-- Insert Statement
INSERT INTO Employees (id, name, manager_id)
VALUES
    (1, 'Alice', NULL),
    (2, 'Bob', 1),
    (3, 'Charlie', 2),
    (4, 'David', 2),
    (5, 'Eve', 3),
    (6, 'Frank', 3),
    (7, 'Grace', 4);


SELECT * FROM Employees

-- Expected output
id	name	level
1	Alice	1
2	Bob	2
3	Charlie	3
4	David	3
5	Eve	4
6	Frank	4
7	Grace	4

-- solution
WITH RECURSIVE employee_heirarchy
AS
(
-- base memeber
SELECT id,name,manager_id, 1 as level
FROM Employees2
WHERE manager_id IS NULL

UNION ALL

-- recursive 
SELECT 
e1.id,
e1.name,
e1.manager_id,
eh.level+1 as level
FROM Employees2 as e1
INNER JOIN 
employee_heirarchy as eh
ON e1.manager_id=eh.id
)
SELECT id,name,manager_id,level
FROM employee_heirarchy;

